{"version":3,"sources":["../node_modules/peerjs/dist sync","reportWebVitals.js","game/type.d.ts","game/Item.tsx","game/utils.ts","game/invite.tsx","game/Game.tsx","game/index.ts","App.tsx","router/paths.ts","router/routes.ts","router/router.tsx","router/index.ts","index.tsx","game/Game.module.scss"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER","classNames","classNamesBind","bind","styles","Item","onClick","children","checked","handleClick","useCallback","classes","className","userIcon","icon","Ex","checkLines","lines","board","user","line","every","getPlayingUser","remote","Circle","gameCheck","REACT_APP_DOMAIN","DOMAIN","process","Invite","playerId","handleShareClick","event","target","select","document","execCommand","shareLink","paths","root","replace","invite","readOnly","value","window","location","protocol","withRouter","Game","match","boardState","setBoardState","useState","Array","fill","map","_","index","setUser","userRef","useRef","lineChecked","setLineChecked","gameOver","setGameOver","playerTurn","setPlayerTurn","setPlayerId","peerId","setPeerId","peer","peerConnection","checkStatus","currentUser","current","rowChecked","columnChecked","crossChecked","newBoardState","send","selected","makePeerConnection","remotePlayerId","player","connect","on","startGame","useEffect","Peer","params","conn","data","newCurrentPlayer","gameClasses","disabled","includes","App","Paths","routes","path","page","Router","Object","route","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.89225db0.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 25;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface ItemProps {\n  id: Cells\n  onClick: (id: Cells) => void\n  children: string\n  checked: boolean\n}\nexport type Cells = 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9\n\nexport type User = 'x' | 'o'\n\nexport type BoardState = { id: Cells; checked: User | null }\n\nexport enum USER {\n  Ex = 'x',\n  Circle = 'o',\n}\n\nexport type MatchParams = { playerId: string }\n\nexport interface PeerData {\n  id?: string,\n  player?: User,\n  selected?: Cells,\n  startGame?: boolean\n}","import React, { useCallback } from 'react'\nimport classNamesBind from 'classnames/bind';\n\nimport { ItemProps } from './type.d'\n\nimport styles from './Game.module.scss'\n\nconst classNames = classNamesBind.bind(styles);\n\nexport const Item: React.FC<ItemProps> = ({ id, onClick, children, checked }: ItemProps) => {\n  const handleClick = useCallback(() => {\n    onClick(id)\n  }, [id, onClick])\n\n  const classes = classNames({\n    'item': true,\n    checked, \n    [children]: children\n  })\n\n  return <span className={classes} onClick={handleClick} />\n}","import { User, BoardState, USER, Cells } from './type.d'\n\nconst CIRCLE = '\\u2756'\nconst EX = '\\u2717'\n\nexport const userIcon = (icon: User) => (icon === USER.Ex ? EX : CIRCLE)\n\nexport const createBoard = () => \n  new Array(9)\n  .fill(null)\n  .map((_, index): BoardState => ({\n    id: index + 1 as Cells,\n    checked: null,\n  }))\n\nexport const checkLines = (lines: Cells[][], board: BoardState[], user: User): Cells[] | null => {\n  for (const line of lines) {\n    const isLineChecked = line.every((id) => board[id - 1].checked === user)\n\n      if (isLineChecked) {\n        return line;\n      }\n  }\n\n  return null\n}\n\nexport const getPlayingUser = (remote: boolean, user: User) => {\n  if (remote) {\n    return user === USER.Ex ? USER.Circle : USER.Ex\n  }\n\n  return user\n}\n\nexport const gameCheck = {\n  rows: [\n    [1, 2, 3],\n    [4, 5, 6],\n    [7, 8, 9],\n  ] as Cells[][],\n\n  columns: [\n    [1, 4, 7],\n    [2, 5, 8],\n    [3, 6, 9],\n  ] as Cells[][],\n\n  cross: [\n    [1, 5, 9],\n    [3, 5, 7],\n  ] as Cells[][],\n}","import React, { useCallback, SyntheticEvent } from 'react'\n\nimport { paths } from '../router'\n\nimport styles from './Game.module.scss'\n\nconst { REACT_APP_DOMAIN: DOMAIN } = process.env\n\nconst Invite: React.FunctionComponent<{playerId: string}> = ({ playerId }) => {\n  const handleShareClick = useCallback((event: SyntheticEvent) => {\n    let target = event.target as HTMLInputElement;\n    target.select()\n\n    document.execCommand('copy')\n  }, [])\n\n  const shareLink = playerId && paths.root.replace(':playerId?', playerId)\n\n  return (\n    <div className={styles.invite}>\n      <div>\n        <h2>Share with a friend to start playing</h2>\n        {playerId && <input onClick={handleShareClick} readOnly value={`${window.location.protocol}//${DOMAIN}/#${shareLink}`} />}\n        <p>\n          {window.location.protocol}{'//'}{DOMAIN}/#{shareLink}\n        </p>\n      </div>\n    </div>\n  )\n}\n\nexport default Invite;","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useCallback, useState, useEffect, useRef } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport classNamesBind from 'classnames/bind';\nimport Peer from 'peerjs';\n\nimport { User, BoardState, USER, MatchParams, PeerData, Cells } from './type.d'\n\nimport { Item } from './Item';\nimport { userIcon, checkLines, getPlayingUser, createBoard, gameCheck } from './utils'\nimport Invite from './invite'\n\nimport styles from './Game.module.scss'\n\nconst classNames = classNamesBind.bind(styles);\n\nconst Game: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n\n  const [boardState, setBoardState] = useState<BoardState[]>(createBoard())\n\n  const [user, setUser] = useState<User>(USER.Ex)\n  const userRef = useRef<User>(USER.Ex)\n  const [lineChecked, setLineChecked] = useState<Cells[]>([0, 0, 0])\n  const [gameOver, setGameOver] = useState<User | boolean>(false)\n  const [playerTurn, setPlayerTurn] = useState<boolean>(true)\n  const [playerId, setPlayerId] = useState<string>()\n  const [peerId, setPeerId] = useState<string>()\n  const peer = useRef<Peer>()\n  const peerConnection = useRef<Peer.DataConnection>()\n\n  const checkStatus = useCallback((board: BoardState[], remote: boolean) => {\n    const currentUser = getPlayingUser(remote, userRef.current)\n\n    const rowChecked    = checkLines(gameCheck.rows, board, currentUser)\n    const columnChecked = checkLines(gameCheck.columns, board, currentUser)\n    const crossChecked  = checkLines(gameCheck.cross, board, currentUser)\n\n    if (rowChecked instanceof Array) {\n      setLineChecked(rowChecked)\n      setGameOver(currentUser)\n    }\n\n    if (columnChecked instanceof Array) {\n      setLineChecked(columnChecked)\n      setGameOver(currentUser)\n    }\n\n    if (crossChecked instanceof Array) {\n      setLineChecked(crossChecked)\n      setGameOver(currentUser)\n    }\n  }, [])\n\n  const handleClick = useCallback(\n    (id: Cells, remote = false) => {\n      const newBoardState = [...boardState]\n\n      if (boardState[id - 1].checked || gameOver || !playerTurn) {\n        return\n      }\n\n      newBoardState[id - 1].checked = getPlayingUser(remote, userRef.current)\n\n      checkStatus(newBoardState, remote)\n\n      setBoardState(newBoardState)\n    \n      if (!remote) {\n        if (peerConnection.current) {\n          peerConnection.current.send({ selected: id })\n        } else {\n          throw Error('Could not send move to peer')\n        }\n\n        setPlayerTurn(false)\n      }\n    },\n    [checkStatus, boardState, gameOver, playerTurn]\n  )\n\n  const makePeerConnection = useCallback((\n    remotePlayerId: string,\n    playerId?: string,\n    player?: User\n  ) => {\n    if (peer.current) {\n      peerConnection.current = peer.current.connect(remotePlayerId)\n      setPeerId(remotePlayerId)\n    } else {\n      throw Error('Could not make a peer connection')\n    }\n\n    if (peerConnection.current) {\n      peerConnection.current.on('open', () => {\n        peerConnection.current?.send({ startGame: true, id: playerId, player });\n      })\n    } else {\n      throw Error('Could not open a peer connection')\n    }\n  }, [])\n\n  useEffect(() => {\n    peer.current = new Peer();\n\n    peer.current.on('open', (id: string) => {\n      setPlayerId(id)\n\n      if (match.params.playerId && !peerId) {\n        makePeerConnection(match.params.playerId, id, user)\n      }\n    })\n\n    peer.current.on('connection', (conn) => {\n      conn.on('open', () => {\n        conn.on('data', (data: PeerData) => {\n          if (data.id && data.startGame) { \n            makePeerConnection(data.id)\n          }\n\n          if (data.id && data.startGame) {\n              const newCurrentPlayer = data.player === USER.Ex ? USER.Circle : USER.Ex\n    \n              setUser(newCurrentPlayer)\n              setPeerId(data.id)\n              setPlayerTurn(false)\n              userRef.current = newCurrentPlayer\n\n              return;\n          }\n  \n          if (data.selected) {\n            handleClick(data.selected, true)\n            setPlayerTurn(true)\n          }\n        })\n      });\n    })\n  }, [])\n\n  const gameClasses = classNames({'game': true, disabled: !peerId})\n\n  return (\n    <div>\n      {!gameOver && (\n        <div className={styles.player}>\n          Player: <span className={styles.icon}>{userIcon(userRef.current)}</span>\n        </div>\n      )}\n      {gameOver && (\n        <div className={styles[\"game-over\"]}>\n          Game Over, winner is <span className={styles.icon}>{userIcon(gameOver as User)}</span>\n        </div>\n      )}\n      <div className={gameClasses}>\n        {boardState.map(({ id, checked }) => (\n          <Item \n            onClick={handleClick} \n            key={id} \n            id={id} \n            checked={lineChecked.includes(id)}>\n            {checked ? checked : ''}\n          </Item>\n        ))}\n      </div>\n      {!peerId && !match.params.playerId && playerId && (\n        <Invite playerId={playerId} />\n      )}\n    </div>\n  )\n}\n\nexport default withRouter(Game)\n","import Game from './Game'\n\nexport default Game","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React from 'react'\nimport Game from './game'\n\nconst App: React.FunctionComponent = () => <Game />\n\nexport default App\n","enum Paths {\n  root = 'root',\n}\n\ntype PathsObject = {\n  [key in Paths]: string\n}\n\nconst paths: PathsObject = {\n  root: '/:playerId?',\n}\n\nexport default paths\n","import App from '../App'\n\nimport paths from './paths'\n\ninterface Routes {\n  [key: string]: {\n    path: string\n    page: React.ComponentClass<any, any> | React.FunctionComponent<any>\n  }\n}\n\nconst routes: Routes = {\n  root: {\n    path: paths.root,\n    page: App,\n  }\n}\n\nexport default routes\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport routes from './routes'\n\nconst Router: React.FC = () => (\n  <HashRouter>\n    <Switch>\n      {Object.keys(routes).map((id) => {\n        const route = routes[id]\n\n        return <Route exact key={id} path={route.path} component={route.page} />\n      })}\n    </Switch>\n  </HashRouter>\n)\n\nexport default Router\n","import Router from './router'\nimport paths from './paths'\nimport routes from './routes'\n\nexport default Router\n\nexport { paths, routes }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nimport Router from './router'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"Game_game__3xRzo\",\"disabled\":\"Game_disabled__35kWx\",\"item\":\"Game_item__1Vt30\",\"x\":\"Game_x__1rol7\",\"o\":\"Game_o__2uUGt\",\"checked\":\"Game_checked__Qj9NT\",\"player-id\":\"Game_player-id__2Kf5F\",\"player\":\"Game_player__SRFBJ\",\"game-over\":\"Game_game-over__1LQQ1\",\"icon\":\"Game_icon__1i3Hy\",\"invite\":\"Game_invite__35FQJ\"};"],"sourceRoot":""}