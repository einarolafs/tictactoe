{"version":3,"sources":["../node_modules/peerjs/dist sync","reportWebVitals.js","type.d.ts","App.tsx","router/paths.ts","router/routes.ts","router/router.tsx","router/index.ts","index.tsx","App.module.scss"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","USER","classNames","classNamesBind","bind","styles","REACT_APP_DOMAIN","DOMAIN","process","Item","onClick","children","checked","handleClick","useCallback","classes","className","userIcon","icon","Ex","checkLines","lines","board","user","foundLine","forEach","line","every","getPlayingUser","remote","Circle","withRouter","Paths","match","boardState","setBoardState","useState","Array","fill","map","_","index","setUser","userRef","useRef","lineChecked","setLineChecked","gameOver","setGameOver","playerTurn","setPlayerTurn","playerId","setPlayerId","peerId","setPeerId","peer","peerConnection","checkStatus","currentUser","current","rowChecked","columnChecked","crossChecked","newBoardState","send","selected","makePeerConnection","remotePlayerId","player","connect","console","log","on","startGame","useEffect","Peer","params","conn","data","newCurrentPlayer","handleShareClick","event","target","select","document","execCommand","shareLink","paths","root","replace","gameClasses","disabled","includes","invite","readOnly","value","window","location","protocol","routes","path","page","App","Router","Object","route","exact","component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.3bb859b3.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 25;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export interface ItemProps {\n  id: number\n  onClick: (id: number) => void\n  children: string\n  checked: boolean\n}\n\nexport type User = 'x' | 'o'\nexport type BoardState = { id: number; checked: User | null }\n\nexport enum USER {\n  Ex = 'x',\n  Circle = 'o',\n}\n\nexport type MatchParams = { playerId: string }","/* eslint-disable jsx-a11y/no-static-element-interactions */\nimport React, { useCallback, useState, useEffect, useRef, SyntheticEvent } from 'react'\nimport { withRouter, RouteComponentProps } from 'react-router'\nimport classNamesBind from 'classnames/bind';\nimport Peer from 'peerjs';\n\nimport { paths } from './router'\nimport { ItemProps, User, BoardState, USER, MatchParams } from './type.d'\n\nimport styles from './App.module.scss'\n\nconst classNames = classNamesBind.bind(styles);\n\nconst { REACT_APP_DOMAIN: DOMAIN } = process.env\n\nconst CIRCLE = '\\u2756'\nconst EX = '\\u2717'\n\nconst Item: React.FC<ItemProps> = ({ id, onClick, children, checked }: ItemProps) => {\n  const handleClick = useCallback(() => {\n    onClick(id)\n  }, [id, onClick])\n\n  const classes = classNames({\n    'item': true,\n    checked, \n    [children]: children\n  })\n\n  return <span className={classes} onClick={handleClick} />\n}\n\nconst userIcon = (icon: User) => (icon === USER.Ex ? EX : CIRCLE)\n\ntype CheckLineReturn = number[] | false;\nconst checkLines = (\n  lines: number[][],\n  board: BoardState[],\n  user: User\n): CheckLineReturn => {\n  \n  let foundLine: CheckLineReturn = false\n\n  lines.forEach((line) => {\n    const isLineChecked = line.every((id) => board[id - 1].checked === user)\n\n    if (isLineChecked) {\n      foundLine = line\n    }\n  })\n\n  return foundLine\n}\n\nconst getPlayingUser = (remote: boolean, user: User) => {\n  if (remote) {\n    return user === USER.Ex ? USER.Circle : USER.Ex\n  }\n\n  return user\n}\n\nconst CardsPage: React.FC<RouteComponentProps<MatchParams>> = ({ match }) => {\n\n  const [boardState, setBoardState] = useState<BoardState[]>(\n    new Array(9)\n      .fill(null)\n      .map((_, index): BoardState => ({\n         id: index + 1,\n         checked: null,\n      }))\n  )\n\n  const [user, setUser] = useState<User>(USER.Ex)\n  const userRef = useRef<User>(USER.Ex)\n  const [lineChecked, setLineChecked] = useState<number[]>([0, 0, 0])\n  const [gameOver, setGameOver] = useState<User | boolean>(false)\n  const [playerTurn, setPlayerTurn] = useState<boolean>(true)\n  const [playerId, setPlayerId] = useState<string>()\n  const [peerId, setPeerId] = useState<string>()\n  const peer = useRef<Peer>()\n  const peerConnection = useRef<Peer.DataConnection>()\n\n  const checkStatus = useCallback((board: BoardState[], remote: boolean) => {\n    const rows = [\n      [1, 2, 3],\n      [4, 5, 6],\n      [7, 8, 9],\n    ]\n\n    const columns = [\n      [1, 4, 7],\n      [2, 5, 8],\n      [3, 6, 9],\n    ]\n\n    const cross = [\n      [1, 5, 9],\n      [3, 5, 7],\n    ]\n\n    const currentUser = getPlayingUser(remote, userRef.current)\n\n    const rowChecked = checkLines(rows, board, currentUser)\n    const columnChecked = checkLines(columns, board, currentUser)\n    const crossChecked = checkLines(cross, board, currentUser)\n\n    if (rowChecked instanceof Array) {\n      setLineChecked(rowChecked)\n      setGameOver(currentUser)\n    }\n\n    if (columnChecked instanceof Array) {\n      setLineChecked(columnChecked)\n      setGameOver(currentUser)\n    }\n\n    if (crossChecked instanceof Array) {\n      setLineChecked(crossChecked)\n      setGameOver(currentUser)\n    }\n  }, [])\n\n  const handleClick = useCallback(\n    (id: number, remote = false) => {\n      const newBoardState = [...boardState]\n\n      if (boardState[id - 1].checked || gameOver || !playerTurn) {\n        return\n      }\n\n      newBoardState[id - 1].checked = getPlayingUser(remote, userRef.current)\n\n      checkStatus(newBoardState, remote)\n\n      setBoardState(newBoardState)\n    \n      if (!remote) {\n        if (peerConnection.current) {\n          peerConnection.current.send({ selected: id })\n        } else {\n          throw Error('Could not send move to peer')\n        }\n\n        setPlayerTurn(false)\n      }\n    },\n    [checkStatus, boardState, gameOver, playerTurn]\n  )\n\n  const makePeerConnection = useCallback((\n    remotePlayerId: string,\n    playerId?: string,\n    player?: User\n  ) => {\n    if (peer.current) {\n      peerConnection.current = peer.current.connect(remotePlayerId)\n      setPeerId(remotePlayerId)\n\n      console.log('make peer connection', peerConnection.current)\n    } else {\n      throw Error('Could not make a peer connection')\n    }\n\n    if (peerConnection.current) {\n      peerConnection.current.on('open', () => {\n        peerConnection.current?.send({ startGame: true, id: playerId, player });\n      })\n    } else {\n      throw Error('Could not open a peer connection')\n    }\n  }, [])\n\n  useEffect(() => {\n\n    console.log(match);\n\n    peer.current = new Peer();\n\n    peer.current.on('open', (id: string) => {\n      setPlayerId(id)\n\n      if (match.params.playerId && !peerId) {\n        makePeerConnection(match.params.playerId, id, user)\n      }\n    })\n\n    peer.current.on('connection', (conn) => {\n      conn.on('open', () => {\n        conn.on('data', (data: {\n          id?: string,\n          player?: string,\n          selected?: number,\n          startGame?: boolean\n        }) => {\n          console.log('on connection', data);\n\n          if (data.id && data.startGame) { \n            makePeerConnection(data.id)\n          }\n\n          if (data.id && data.startGame) {\n              const newCurrentPlayer = data.player === USER.Ex ? USER.Circle : USER.Ex\n\n              // console.log('Setup game from remote connection and set player to false \\n')\n\n              //console.log(newCurrentPlayer);\n    \n              setUser(newCurrentPlayer)\n              setPeerId(data.id)\n              setPlayerTurn(false)\n              userRef.current = newCurrentPlayer\n\n              return;\n          }\n  \n          if (data.selected) {\n            console.log('set remote selection and set turn as true \\n')\n            handleClick(data.selected, true)\n            setPlayerTurn(true)\n          }\n        })\n      });\n    })\n  }, [])\n\n  const handleShareClick = useCallback((event: SyntheticEvent) => {\n    let target = event.target as HTMLInputElement;\n    target.select()\n\n    document.execCommand('copy')\n  }, [])\n\n  const shareLink = playerId && paths.root.replace(':playerId?', playerId)\n\n  const gameClasses = classNames({\n    'game': true, \n    disabled: !peerId \n  })\n\n  return (\n    <div>\n      {/*  <h2 styleName=\"player-id\">Player: {playerId}</h2> */}\n      {!gameOver && (\n        <div className={styles.player}>\n          Player: <span className={styles.icon}>{userIcon(userRef.current)}</span>\n        </div>\n      )}\n      {gameOver && (\n        <div className={styles[\"game-over\"]}>\n          Game Over, winner is <span className={styles.icon}>{userIcon(gameOver as User)}</span>\n        </div>\n      )}\n      <div className={gameClasses}>\n        {boardState.map(({ id, checked }) => (\n          <Item \n            onClick={handleClick} \n            key={id} \n            id={id} \n            checked={lineChecked.includes(id)}>\n            {checked ? checked : ''}\n          </Item>\n        ))}\n      </div>\n      {!peerId && !match.params.playerId && (\n        <div className={styles.invite}>\n          <div>\n            <h2>Share with a friend to start playing</h2>\n            {playerId && <input onClick={handleShareClick} readOnly value={`${window.location.protocol}//${DOMAIN}/#${shareLink}`} />}\n            <p>\n              {window.location.protocol}{'//'}{DOMAIN}/#{shareLink}\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default withRouter(CardsPage)\n","enum Paths {\n  root = 'root',\n}\n\ntype PathsObject = {\n  [key in Paths]: string\n}\n\nconst paths: PathsObject = {\n  root: '/:playerId?',\n}\n\nexport default paths\n","import App from '../App'\nimport TextComponent from '../text/text'\n\nimport paths from './paths'\n\ninterface Routes {\n  [key: string]: {\n    path: string\n    page: React.ComponentClass<any, any> | React.FunctionComponent<any>\n  }\n}\n\nconst routes: Routes = {\n  root: {\n    path: paths.root,\n    page: App,\n  }\n}\n\nexport default routes\n","import React from 'react'\nimport { HashRouter, Switch, Route } from 'react-router-dom'\n\nimport routes from './routes'\n\nconst Router: React.FC = () => (\n  <HashRouter>\n    <Switch>\n      {Object.keys(routes).map((id) => {\n        const route = routes[id]\n\n        return <Route exact key={id} path={route.path} component={route.page} />\n      })}\n    </Switch>\n  </HashRouter>\n)\n\nexport default Router\n","import Router from './router'\nimport paths from './paths'\nimport routes from './routes'\n\nexport default Router\n\nexport { paths, routes }\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport reportWebVitals from './reportWebVitals';\n\nimport Router from './router'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"game\":\"App_game__3gwdi\",\"disabled\":\"App_disabled__yJtTF\",\"item\":\"App_item__16P43\",\"x\":\"App_x__17nIi\",\"o\":\"App_o__3UHLk\",\"checked\":\"App_checked__28F2E\",\"player-id\":\"App_player-id__XnNDY\",\"player\":\"App_player__emS81\",\"game-over\":\"App_game-over__MaRuD\",\"icon\":\"App_icon__1T5rY\",\"invite\":\"App_invite__3i5KG\"};"],"sourceRoot":""}